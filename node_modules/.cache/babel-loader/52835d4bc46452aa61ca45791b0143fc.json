{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/mohammedismayil/ismayildemo/mohammedismayil.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/home/mohammedismayil/ismayildemo/mohammedismayil.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n      {\\n        user(login:\\\"\",\"\\\") { \\n          name\\n          bio\\n          isHireable\\n          avatarUrl\\n          location\\n        }\\n    }\\n      \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,lazy,Suspense}from\"react\";import ApolloClient,{gql}from\"apollo-boost\";import{openSource}from\"../../portfolio\";import Contact from\"../contact/Contact\";import Loading from\"../loading/Loading\";var renderLoader=function renderLoader(){return/*#__PURE__*/React.createElement(Loading,null);};var GithubProfileCard=lazy(function(){return import(\"../../components/githubProfileCard/GithubProfileCard\");});export default function Profile(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),prof=_useState2[0],setrepo=_useState2[1];function setProfileFunction(array){setrepo(array);}function getProfileData(){var client=new ApolloClient({uri:\"https://api.github.com/graphql\",request:function request(operation){operation.setContext({headers:{authorization:\"Bearer \".concat(openSource.githubConvertedToken)}});}});client.query({query:gql(_templateObject(),openSource.githubUserName)}).then(function(result){setProfileFunction(result.data.user);}).catch(function(error){console.log(error);setProfileFunction(\"Error\");console.log(\"Because of this Error Contact Section is Showed instead of Profile\");openSource.showGithubProfile=\"false\";});}useEffect(function(){if(openSource.showGithubProfile===\"true\"){getProfileData();}},[]);if(openSource.display&&openSource.showGithubProfile===\"true\"&&!(typeof prof===\"string\"||prof instanceof String)){return/*#__PURE__*/React.createElement(Suspense,{fallback:renderLoader()},/*#__PURE__*/React.createElement(GithubProfileCard,{prof:prof,key:prof.id}));}else{return/*#__PURE__*/React.createElement(Contact,null);}}","map":{"version":3,"sources":["/home/mohammedismayil/ismayildemo/mohammedismayil.github.io/src/containers/profile/Profile.js"],"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","openSource","Contact","Loading","renderLoader","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","display","String","id"],"mappings":"4pBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,IAApC,CAA0CC,QAA1C,KAAyD,OAAzD,CACA,MAAOC,CAAAA,YAAP,EAAsBC,GAAtB,KAAgC,cAAhC,CACA,OAAQC,UAAR,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBAAM,oBAAC,OAAD,MAAN,EAArB,CACA,GAAMC,CAAAA,iBAAiB,CAAGR,IAAI,CAAC,iBAC7B,QAAO,sDAAP,CAD6B,EAAD,CAA9B,CAGA,cAAe,SAASS,CAAAA,OAAT,EAAmB,eACRX,QAAQ,CAAC,EAAD,CADA,wCACzBY,IADyB,eACnBC,OADmB,eAEhC,QAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACjCF,OAAO,CAACE,KAAD,CAAP,CACD,CACD,QAASC,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,MAAM,CAAG,GAAIb,CAAAA,YAAJ,CAAiB,CAC9Bc,GAAG,CAAE,gCADyB,CAE9BC,OAAO,CAAE,iBAAAC,SAAS,CAAI,CACpBA,SAAS,CAACC,UAAV,CAAqB,CACnBC,OAAO,CAAE,CACPC,aAAa,kBAAYjB,UAAU,CAACkB,oBAAvB,CADN,CADU,CAArB,EAKD,CAR6B,CAAjB,CAAf,CAWAP,MAAM,CACHQ,KADH,CACS,CACLA,KAAK,CAAEpB,GAAF,mBAESC,UAAU,CAACoB,cAFpB,CADA,CADT,EAcGC,IAdH,CAcQ,SAAAC,MAAM,CAAI,CACdd,kBAAkB,CAACc,MAAM,CAACC,IAAP,CAAYC,IAAb,CAAlB,CACD,CAhBH,EAiBGC,KAjBH,CAiBS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAlB,kBAAkB,CAAC,OAAD,CAAlB,CACAmB,OAAO,CAACC,GAAR,CACE,oEADF,EAGA5B,UAAU,CAAC6B,iBAAX,CAA+B,OAA/B,CACD,CAxBH,EAyBD,CACDlC,SAAS,CAAC,UAAM,CACd,GAAIK,UAAU,CAAC6B,iBAAX,GAAiC,MAArC,CAA6C,CAC3CnB,cAAc,GACf,CACF,CAJQ,CAIN,EAJM,CAAT,CAKA,GACEV,UAAU,CAAC8B,OAAX,EACA9B,UAAU,CAAC6B,iBAAX,GAAiC,MADjC,EAEA,EAAE,MAAOvB,CAAAA,IAAP,GAAgB,QAAhB,EAA4BA,IAAI,WAAYyB,CAAAA,MAA9C,CAHF,CAIE,CACA,mBACE,oBAAC,QAAD,EAAU,QAAQ,CAAE5B,YAAY,EAAhC,eACE,oBAAC,iBAAD,EAAmB,IAAI,CAAEG,IAAzB,CAA+B,GAAG,CAAEA,IAAI,CAAC0B,EAAzC,EADF,CADF,CAKD,CAVD,IAUO,CACL,mBAAO,oBAAC,OAAD,MAAP,CACD,CACF","sourcesContent":["import React, {useState, useEffect, lazy, Suspense} from \"react\";\nimport ApolloClient, {gql} from \"apollo-boost\";\nimport {openSource} from \"../../portfolio\";\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() =>\n  import(\"../../components/githubProfileCard/GithubProfileCard\")\n);\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `\n      })\n      .then(result => {\n        setProfileFunction(result.data.user);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setProfileFunction(\"Error\");\n        console.log(\n          \"Because of this Error Contact Section is Showed instead of Profile\"\n        );\n        openSource.showGithubProfile = \"false\";\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\n  if (\n    openSource.display &&\n    openSource.showGithubProfile === \"true\" &&\n    !(typeof prof === \"string\" || prof instanceof String)\n  ) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} />\n      </Suspense>\n    );\n  } else {\n    return <Contact />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}